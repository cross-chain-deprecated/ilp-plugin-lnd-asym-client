'use strict'

const decodePaymentRequest = require('../src/reqdecode').decodePaymentRequest
const assert = require('chai').assert

const decodePaymentTestCases = [
  {
    reqStr: 'ypx8wrj31zto171zs6dhhoksnswtc4h8xesfw3o16z1xz1fo1myno5g8rj5oppy67nnybg3jimtnksw5aipchzyhrr33nnbdb9tdqikyyyyyyyyyyyb6o5b1zj8o',
    req: {
      destination: new Uint8Array([0x3, 0x5e, 0x7a, 0x11, 0x39, 0x95, 0xe3, 0x9, 0x76, 0x57, 0xb7, 0x87, 0xce, 0x41, 0x56, 0x15, 0xa9, 0x16, 0x6b, 0x87, 0x7a, 0x2c, 0x5a, 0x66, 0x12, 0xf5, 0xe4, 0xfb, 0xc8, 0xb0, 0x92, 0xc0, 0x28]),
      paymentHash: new Uint8Array([0x6c, 0xc7, 0x22, 0x77, 0x6, 0xb4, 0x1e, 0xe8, 0x84, 0x0, 0x9b, 0x29, 0xaa, 0xe2, 0x25, 0x5a, 0x9b, 0xc5, 0x5a, 0xce, 0x5c, 0x1c, 0x21, 0x33, 0x91, 0x8, 0x23, 0xf, 0xe2, 0x37, 0x55, 0x40]),
      amount: 1000
    }
  },
  {
    reqStr: 'ykdgg6xxqorxz3qf4wmgruystzxmmze63en8ucwh977sa4bqf47uxidt9ws6f5z4pghhx84u7zstij9ke3o1eij9u9n4tn17an5rhfu3yyyyyyyyyyngbh3jwgiy',
    req: {
      destination: new Uint8Array([0x2, 0x86, 0x63, 0x79, 0xef, 0x74, 0x8, 0xfb, 0xe5, 0xc5, 0xd5, 0x16, 0x62, 0x4c, 0x16, 0x8d, 0xde, 0xb5, 0xdd, 0x1e, 0xca, 0x4, 0x79, 0xb2, 0x9c, 0xff, 0x7b, 0x6c, 0x68, 0x2e, 0x2e, 0xbb, 0x37]),
      paymentHash: new Uint8Array([0xd4, 0x71, 0xfd, 0x2d, 0xe2, 0xee, 0xfa, 0x69, 0xb9, 0xc7, 0x9f, 0x53, 0xed, 0xed, 0x1a, 0xa7, 0xea, 0x46, 0x61, 0x24, 0x55, 0x3f, 0x9f, 0xc5, 0xa8, 0x8a, 0x5d, 0xc0, 0xb6, 0x4e, 0x16, 0x79]),
      amount: 1120
    }
  },
  {
    reqStr: 'yqqyson6y6kgb7haz59wfz8ozee75bpzjr5qbdi8hdbxiqstn64hwz7hqxmhrgmgzwwjpszo4q1n6mk3dija3kgd6geip6e61s67jicsyyyyyyw5scbnqxy5qjdo',
    req: {
      destination: new Uint8Array([0x3, 0x9c, 0xb, 0x40, 0x5e, 0x7, 0x94, 0x60, 0xf7, 0x98, 0xbe, 0xff, 0x42, 0xdc, 0xf0, 0xba, 0x11, 0xdd, 0x85, 0xb7, 0x49, 0x36, 0xe0, 0x8e, 0xa7, 0xe0, 0xc2, 0xfa, 0xba, 0xd1, 0x17, 0xb5, 0xca]),
      paymentHash: new Uint8Array([0x5f, 0xbc, 0x73, 0xd7, 0xc2, 0x19, 0x66, 0xbd, 0x28, 0x96, 0xda, 0xf0, 0xd3, 0xa4, 0x2f, 0x2d, 0x59, 0x1d, 0x53, 0x8c, 0xa8, 0xc3, 0xf1, 0x91, 0x56, 0xf9, 0x1e, 0x95, 0xbd, 0xd4, 0xd5, 0x96]),
      amount: 11202134567
    }
  }
]

describe('Payment Request Decoder', function () {
  it('should correctly parse payment requests', function () {
    for (let testCase of decodePaymentTestCases) {
      const decodedReq = decodePaymentRequest(testCase.reqStr)
      const expectedReq = testCase.req
      assert.equal(decodedReq.amount, expectedReq.amount, 'Amount does not much ' + decodedReq.amount + ' !=' + expectedReq.amount)
      assert.deepEqual(decodedReq.destination.buffer, expectedReq.destination.buffer, 'Destination does not match')
      assert.deepEqual(decodedReq.paymentHash.buffer, expectedReq.paymentHash.buffer, 'Payment hash does not match')
    }
  })
})
